[tool.poetry]
name = "flask_cognito_lib"
version = "1.6.1"
description = "A Flask extension that supports protecting routes with AWS Cognito following OAuth 2.1 best practices"
license = "MIT"
authors = ["mblackgeo <18327836+mblackgeo@users.noreply.github.com>"]
readme = "README.md"
homepage = "https://github.com/mblackgeo/flask-cognito-lib"
repository = "https://github.com/mblackgeo/flask-cognito-lib"
keywords = ["Flask", "Extension", "OAuth", "Cognito"]
classifiers = [
    "Framework :: Flask",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Internet :: WWW/HTTP :: WSGI",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Middleware",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
packages = [
    { include = "flask_cognito_lib", from = "src"}
]

[tool.poetry.dependencies]
python = "^3.8"
Flask = ">=2.0,<4.0"
requests = "~=2.0"
PyJWT = { extras = ["crypto"], version = ">=2.4,<3.0" }
urllib3 = "<3.0"

[tool.poetry.dev-dependencies]
pytest = "^7.2"
mypy = "^1.6"
black = "^22.1.0"
flake8 = "^4.0.1"
typed-ast = "^1.5.2"
pylint = "^2.12.2"
types-requests = "^2.27.13"
pytest-mock = "^3.7.0"
pytest-cov = "^3.0.0"
python-dotenv = "^0.19.2"
mkdocs-material = "^8.2.6"
mdx-include = "^1.4.1"
python-semantic-release = "^7.27.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["flask_cognito_lib"]


[tool.semantic_release]
version_variable = [
    "src/flask_cognito_lib/__init__.py:__version__"
]
version_toml = [
    "pyproject.toml:tool.poetry.version"
]
major_on_zero = false
branch = "main"
upload_to_repository = false
upload_to_release = true
build_command = "pip install poetry==1.1.12 && poetry build"
dist_path = "dist/"
changelog_file = "CHANGELOG.md"
patch_without_tag = false